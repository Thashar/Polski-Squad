#!/bin/bash

# ü§ñ Automatyczny merge zmian Claude do main
# U≈ºycie: ./merge.sh

set -e  # Zatrzymaj przy b≈Çƒôdzie

echo "üîç Szukam najnowszego brancha Claude..."

# Pobierz najnowszy branch zaczynajƒÖcy siƒô od 'claude/'
CLAUDE_BRANCH=$(git branch -a | grep 'remotes/origin/claude/' | sed 's/remotes\/origin\///' | tail -1 | xargs)

if [ -z "$CLAUDE_BRANCH" ]; then
    echo "‚ùå Nie znaleziono brancha Claude!"
    echo "‚ÑπÔ∏è  Upewnij siƒô, ≈ºe Claude wypushowa≈Ç zmiany."
    exit 1
fi

echo "‚úÖ Znaleziono branch: $CLAUDE_BRANCH"
echo ""

# Poka≈º co siƒô zmieni≈Ço
echo "üìã Zmienione pliki:"
git diff --name-status main.."origin/$CLAUDE_BRANCH" | head -20
echo ""

# Potwierd≈∫
read -p "ü§î Mergowaƒá ten branch do main? (y/N): " -n 1 -r
echo ""

if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå Anulowano merge."
    exit 0
fi

echo "üîÑ Mergowanie do main..."

# Prze≈ÇƒÖcz siƒô na main
git checkout main

# Pobierz najnowsze zmiany
git pull origin main

# Zmerguj branch Claude
git merge "$CLAUDE_BRANCH" --no-edit

# Wypchnij na GitHub
echo "üöÄ Wysy≈Çanie na GitHub..."
git push origin main

# Usu≈Ñ zdalny branch Claude (opcjonalnie)
read -p "üóëÔ∏è  UsunƒÖƒá branch $CLAUDE_BRANCH? (Y/n): " -n 1 -r
echo ""

if [[ $REPLY =~ ^[Yy]$ ]] || [[ -z $REPLY ]]; then
    git push origin --delete "$CLAUDE_BRANCH" 2>/dev/null || echo "‚ÑπÔ∏è  Branch ju≈º usuniƒôty lub brak uprawnie≈Ñ"
    git branch -d "$CLAUDE_BRANCH" 2>/dev/null || echo "‚ÑπÔ∏è  Lokalny branch nie istnieje"
fi

echo ""
echo "‚úÖ ============================================"
echo "‚úÖ MERGE ZAKO≈ÉCZONY POMY≈öLNIE!"
echo "‚úÖ ============================================"
echo ""
echo "üîÑ Teraz zrestartuj bota na serwerze:"
echo ""
echo "   Dla bota Kontroler:"
echo "   pm2 restart kontroler"
echo ""
echo "   Lub wszystkie boty:"
echo "   pm2 restart all"
echo ""
